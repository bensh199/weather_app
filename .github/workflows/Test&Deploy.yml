name: weather-app-deployment

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: build image
        working-directory: /home/runner/work/weather_app/weather_app/Python-Project
        run: |
          docker build -t bensh99/weatherapp:latest .

      - name: test image
        working-directory: /home/runner/work/weather_app/weather_app/Python-Project
        run: |
          docker run -p 8000:8000 --rm --name weather_app -d bensh99/weatherapp:latest
          python3 test.py
          docker kill weather_app

      - name: save ansible to cache
        uses: actions/upload-artifact@v4
        with:
          name: ansible-deployment
          path: /home/runner/work/weather_app/weather_app/Ansible/*

      - name: push image
        run: docker push bensh99/weatherapp:latest

  deploy:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - name: install-and-configure-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
          verbose: false
          arch: amd64
      - run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: get deployment servers
        run: |
          echo "Deployment_Servers=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=Production server" --query "Reservations[*].Instances[*].PublicIpAddress" --output text)" >> $GITHUB_ENV

      - name: download ansible artifact
        uses: actions/download-artifact@v4
        with:
          name: ansible-deployment

      - name: Output SSH key to file
        run: |
          mkdir ~/.ssh
          echo "${{secrets.DEPLOYMENT_SSH_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy via ansible
        run: |
          export ANSIBLE_HOST_KEY_CHECKING=False
          echo "ansible1 ansible_host=51.16.41.220 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa" > hosts_github
          ansible-playbook ansible-deployment.yaml -i hosts_github